[{"/Users/kanno/code/React/calendar-app-typescript/src/index.tsx":"1","/Users/kanno/code/React/calendar-app-typescript/src/App.tsx":"2","/Users/kanno/code/React/calendar-app-typescript/src/components/index.ts":"3","/Users/kanno/code/React/calendar-app-typescript/src/components/Header.tsx":"4","/Users/kanno/code/React/calendar-app-typescript/src/components/CalendarBoard.tsx":"5","/Users/kanno/code/React/calendar-app-typescript/src/utils/renderCalendar.ts":"6","/Users/kanno/code/React/calendar-app-typescript/src/features/time/timeSlice.ts":"7","/Users/kanno/code/React/calendar-app-typescript/src/features/store/store.ts":"8","/Users/kanno/code/React/calendar-app-typescript/src/utils/Array.ts":"9","/Users/kanno/code/React/calendar-app-typescript/src/components/UIKit/index.ts":"10","/Users/kanno/code/React/calendar-app-typescript/src/components/UIKit/TextInput.tsx":"11","/Users/kanno/code/React/calendar-app-typescript/src/firebase/index.ts":"12","/Users/kanno/code/React/calendar-app-typescript/src/firebase/config.ts":"13","/Users/kanno/code/React/calendar-app-typescript/src/features/schedules/scheduleSlice.ts":"14","/Users/kanno/code/React/calendar-app-typescript/src/components/ScheduleDialog.tsx":"15"},{"size":421,"mtime":1612102006739,"results":"16","hashOfConfig":"17"},{"size":305,"mtime":1612003434787,"results":"18","hashOfConfig":"17"},{"size":158,"mtime":1612256100119,"results":"19","hashOfConfig":"17"},{"size":1943,"mtime":1612231495807,"results":"20","hashOfConfig":"17"},{"size":5707,"mtime":1612256114809,"results":"21","hashOfConfig":"17"},{"size":1560,"mtime":1612231495832,"results":"22","hashOfConfig":"17"},{"size":572,"mtime":1612102006738,"results":"23","hashOfConfig":"17"},{"size":307,"mtime":1612231495815,"results":"24","hashOfConfig":"17"},{"size":67,"mtime":1612102006739,"results":"25","hashOfConfig":"17"},{"size":49,"mtime":1612250983447,"results":"26","hashOfConfig":"17"},{"size":773,"mtime":1612231495811,"results":"27","hashOfConfig":"17"},{"size":267,"mtime":1612231495816,"results":"28","hashOfConfig":"17"},{"size":348,"mtime":1612231495815,"results":"29","hashOfConfig":"17"},{"size":2909,"mtime":1612255388535,"results":"30","hashOfConfig":"17"},{"size":4502,"mtime":1612256058965,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"amh1n0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/kanno/code/React/calendar-app-typescript/src/index.tsx",[],["69","70"],"/Users/kanno/code/React/calendar-app-typescript/src/App.tsx",[],"/Users/kanno/code/React/calendar-app-typescript/src/components/index.ts",[],"/Users/kanno/code/React/calendar-app-typescript/src/components/Header.tsx",[],"/Users/kanno/code/React/calendar-app-typescript/src/components/CalendarBoard.tsx",["71","72"],"import React, { useEffect, useState } from 'react'\nimport {makeStyles} from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {dayArray} from '../utils/Array'\nimport dayjs from 'dayjs'\nimport { getDayjs } from '../features/time/timeSlice'\nimport {renderCalendar} from '../utils/renderCalendar'\nimport {ScheduleDialog} from './index'\nimport {fetchSchedulesAsync, getSchedules} from '../features/schedules/scheduleSlice'\n\nconst useStyles = makeStyles({\n    board:{\n        height: '92vh',\n        borderTop: '1px solid #ccc ',\n        borderLeft: '1px solid #ccc'\n    },\n    dayList:{\n        display: 'flex',\n        textAlign: 'center',\n        fontSize:'0.75rem'\n    },\n    dateList:{\n        display: 'flex',\n        textAlign: 'center',\n        fontSize:'0.75rem',\n        width: '100%',\n    },\n    dayItem:{\n        listStyle: 'none',\n        width:'14.2%',\n        color:'rgba(0, 0, 0, 0.54)',\n        height: '20px',\n        paddingTop: '10px',\n        borderRight: '1px solid #ccc',\n    },\n    dateItem:{\n        listStyle: 'none',\n        width:'14.2%',\n        color:'rgba(0, 0, 0, 0.40)',\n        height: '135px',\n        paddingTop: '10px',\n        borderRight: '1px solid #ccc',\n        borderBottom: '1px solid #ccc',\n\n    },\n    dateIsMonthItem:{\n        listStyle: 'none',\n        width:'14.2%',\n        color:'black',\n        height: '135px',\n        paddingTop: '10px',\n        borderRight: '1px solid #ccc',\n        borderBottom: '1px solid #ccc',\n\n    },\n    dateNum:{\n        marginBottom:'10px'\n    },\n    bar:{\n        width:'90%',\n        margin:'5px auto',\n        backgroundColor: '#6aa7d0',\n        padding: '6px 0',\n        borderRadius: '4px',\n        color: '#f5f5f5',\n        cursor: 'pointer'\n    }\n})\n\nconst CalendarBoard = ()=>{\n    const classes = useStyles()\n    const selector = useSelector(state => state)\n    const year = dayjs(getDayjs(selector)).year()\n    const month = dayjs(getDayjs(selector)).month() \n    const dispatch = useDispatch()\n\n    const [isCreate, setIscreate] = useState(false)\n    const [detail, setDetail] = useState({})\n    const [selectedTime, setSelectedTime] = useState({})\n\n    const calendar = renderCalendar(year, month)\n    const schedules = getSchedules(selector)\n\n    const handleIsCreate = () =>{\n        setIscreate(false)\n        setTimeout(()=>{\n            setDetail({})\n        },300)\n    }\n\n    const handleIsCreateClose = () =>{\n        setIscreate(false)\n    }\n\n    const hadnleSelectedTime = (year: number, month: number, date: number) =>{\n        setSelectedTime({\n            year: year,\n            month: month,\n            date: date\n        })\n    }\n    \n    useEffect( ()=>{\n        dispatch(fetchSchedulesAsync(year, month))\n    },[month])\n    \n\treturn (\n    <>\n        <div className={classes.board} >\n            <ul className={classes.dayList} >\n                {\n                    dayArray.map((day: string,i: number) =>(\n                        <li key={i.toString()} className={classes.dayItem} >{day}</li>\n                    ))\n                }\n            </ul>\n                {\n                    calendar.map((weekDate: number[], i: number)=>(\n                        <ul className={classes.dateList} >\n                            {\n                                weekDate.map((date:any , i:number)=>{\n                                    const todaySchedules = schedules.filter((schedule:any)=> (date.isMonth === true && date.date === schedule.date) )\n                                    return(\n                                        <li \n                                            className={  date.isMonth ?  classes.dateIsMonthItem : classes.dateItem }  \n                                            key={i.toString()}　\n                                            onClick={()=>{\n                                                hadnleSelectedTime(year, month, date.date)\n                                                setIscreate(true)\n                                            }}\n                                        >\n                                            <div className={classes.dateNum} > \n                                             {date.date}</div>\n                                            {\n                                                todaySchedules.map((schedule:any)=>{\n                                                    return(\n                                                        <div className={classes.bar} onClick={()=> setDetail({\n                                                            title: schedule.title,\n                                                            place: schedule.place,\n                                                            description: schedule.description,\n                                                            created_at: schedule.created_at,\n                                                            month: month+1,\n                                                            date: date.date\n                                                        })} >{schedule.title}</div>\n                                                    )\n                                                })     \n                                            }\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    ))\n                }\n        </div>\n        <ScheduleDialog\n            handleToggle={()=> handleIsCreate()}\n            open={isCreate}\n            time={selectedTime}\n            detail={detail}\n        />\n    </>\n)\n}\n\nexport default CalendarBoard\n","/Users/kanno/code/React/calendar-app-typescript/src/utils/renderCalendar.ts",["73"],"import { DockRounded } from '@material-ui/icons'\nimport dayjs from 'dayjs'\n\nconst renderPreviousCalendar = (y:number,m:number) =>{\n    const previousArray = []\n    const d = new Date(y,m)\n    const day = dayjs(d).day()\n    let date = dayjs(d).date(0).date()\n\n    for(let i = 1 ; i <= day ;i++){\n        previousArray.unshift({\n            date: date,\n            isMonth: false\n        })\n        date--\n    }\n    return previousArray\n}\n\nconst renderNextCalendar = (y:number ,m:number ) =>{\n    const NextArray = []\n    const d = new Date(y,m+1)\n    let day = dayjs(d).day()\n\n    for(let i = 1 ; day <= 6 ;i++){\n        NextArray.push({\n            date: i,\n            isMonth: false\n        })\n        day++\n    }    \n\n    return NextArray\n}\n\nconst rendercCurrentCalendar = (y:number,m:number) =>{\n    const CurentArray = []\n    const d = new Date(y,m+1)\n    let date = dayjs(d).date(0).date()\n\n    for(let i=1; i <= date ; i++){\n        CurentArray.push({\n            date: i,\n            isMonth: true\n        })\n    }\n\n    return CurentArray\n}\n\nconst arrayChunk = ([...array], size = 1) => {\n    return array.reduce((acc, value, index) => index % size ? acc : [...acc, array.slice(index, index + size)], []);\n}\n\nexport const renderCalendar = (y:number,m:number) => {\n    const p = renderPreviousCalendar(y,m)  //先月\n    const n = rendercCurrentCalendar(y,m)　//今月\n    const c = renderNextCalendar(y,m)      //来月\n\n    const calendar = p.concat(n).concat(c)\n    \n\n    const slicedCalendar = arrayChunk(calendar, 7)\n    return slicedCalendar\n}\n\n\n","/Users/kanno/code/React/calendar-app-typescript/src/features/time/timeSlice.ts",[],"/Users/kanno/code/React/calendar-app-typescript/src/features/store/store.ts",["74"],"import { combineReducers } from 'redux'\nimport timeSlice from '../time/timeSlice'\nimport schedulesSlice from '../schedules/scheduleSlice'\nimport scheduleSlice from '../schedules/scheduleSlice'\n\nexport const rootReducer = combineReducers({\n    time: timeSlice.reducer,\n    schedules: scheduleSlice.reducer\n})","/Users/kanno/code/React/calendar-app-typescript/src/utils/Array.ts",[],"/Users/kanno/code/React/calendar-app-typescript/src/components/UIKit/index.ts",[],"/Users/kanno/code/React/calendar-app-typescript/src/components/UIKit/TextInput.tsx",[],["75","76"],"/Users/kanno/code/React/calendar-app-typescript/src/firebase/index.ts",[],"/Users/kanno/code/React/calendar-app-typescript/src/firebase/config.ts",[],"/Users/kanno/code/React/calendar-app-typescript/src/features/schedules/scheduleSlice.ts",["77"],"import {createSelector, createSlice} from '@reduxjs/toolkit'\nimport { profile } from 'console'\nimport{ db, FirebaseTimestamp} from '../../firebase/index'\n\n\n// sliceの定義\nconst initialState: any[] =  []\nconst scheduleSlice = createSlice({\n    name: 'time',\n    initialState,\n    reducers:{\n        addSchedules: (state, action) => {\n            state.push(action.payload)\n        },\n        fetchSchedules: (state, action)=>{\n            state.push(...action.payload)\n        },\n        resetSchedule:(state)=>{\n            return initialState\n        },\n        deleteSchedule:(state, action)=>{\n            state.push(...action.payload)\n        }\n    },\n})\n\n// 非同期処理\nexport const addSchedulesAsync = (title: string, place: string, description: string, time: any)=>{\n    return async (dispatch: any): Promise<void> =>{\n        const timestamp = FirebaseTimestamp.now()\n        const schedule = {\n            title: title,\n            place: place,\n            description: description,\n            year: time.year,\n            month: time.month,\n            date: time.date,\n            created_at: timestamp\n        }\n\n        await db.collection('schedules').doc(timestamp.toString()).set(schedule)\n            .then(()=>{\n                dispatch(addSchedules(schedule))\n            }).catch((error)=>{\n                throw new Error(error)\n            })\n    }\n}\n\nexport const fetchSchedulesAsync = (year: number,month: number)=>{\n    return async (dispatch: any): Promise<void> =>{\n        dispatch(resetSchedule())\n        await db.collection('schedules').get()\n            .then((snapshots:any)=>{\n                const schedules: any[] = []\n                snapshots.forEach((snapshot: any)=>{\n                    const schedule = snapshot.data()\n                    if(schedule.year === year && schedule.month === month){\n                        schedules.push(schedule)\n                    }\n                })\n                dispatch(fetchSchedules(schedules))        \n            }).catch((error)=>{\n                throw new Error(error)\n            })\n    }\n}\n\nexport const deleteScheduleAsync = (id: any) =>{\n    console.log(id)\n    return async (dispatch: any, getState: any): Promise<void>  =>{\n        await db.collection('schedules').doc(id.toString()).delete()\n            .then(()=>{\n                const prevSchedules = getState().schedules\n                const nextSchedules = prevSchedules.filter((schedule:any)=> schedule.created_at !== id)\n                dispatch(resetSchedule())\n                dispatch(deleteSchedule(nextSchedules))\n            })\n    }\n}\n\n\n\n// action,sliceのexport \nexport const {addSchedules,fetchSchedules,resetSchedule, deleteSchedule} = scheduleSlice.actions\nexport default scheduleSlice\n\nconst schedulesSelector = (state: any) => state.schedules\n\nexport const getSchedules = createSelector(\n    [schedulesSelector],\n    state => state\n)","/Users/kanno/code/React/calendar-app-typescript/src/components/ScheduleDialog.tsx",["78","79"],"import React, { useCallback, useState } from 'react'\nimport {DialogTitle,DialogContent, Dialog, DialogActions, Button} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core'\nimport {TextInput} from './UIKit/index'\nimport PlaceIcon from '@material-ui/icons/Place';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {addSchedulesAsync, deleteScheduleAsync} from '../features/schedules/scheduleSlice'\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst useStyles = makeStyles({\n        dialog:{\n\n        },\n        place:{\n                display: 'flex'\n        },\n        icon:{\n                height: '45px',\n                width: '30px',\n                margin: '8px 15px 4px 0',\n                display:'block',\n\t\t},\n\t\tcontent:{\n\t\t\twidth:'350px',\n\t\t\t'& h2':{\n\t\t\t\tfontSize: '25px',\n\t\t\t\tmarginBottom: '15px'\n\t\t\t},\n\t\t\t'& p':{\n\t\t\t\tfontSize: '18px',\n\t\t\t\tmarginBottom: '15px',\n\t\t\t\topacity: '0.8'\t\t\t\t\n\t\t\t}\n\t\t},\n\t\tdetailTitle:{\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'space-between'\n\t\t},\n\t\tdetailIcon:{\n\t\t\twidth: '33px',\n\t\t\tcursor: 'pointer'\n\t\t}\n})\n\ntype ScheduleCreateDialogProps = {\n        handleToggle: () => void,\n        open: boolean,\n        time:{\n          year: number,\n          month: number,\n          date: number\n\t\t} | {},\n\t\tdetail?: any\n}\n\nconst ScheduleDialog = (props: ScheduleCreateDialogProps)=>{\n\tconst classes = useStyles()\n\tconst dispatch = useDispatch()\n\tconst selector = useSelector(state => state)\n\tconst [title, setTitle] = useState('')\n\tconst [place, setPlace] = useState('')\n\tconst [description, setDescription] = useState('')\n\n\tconsole.log(props.detail)\n\n\tconst ScheduleInputChange = useCallback((e)=>{\n\t\t\tsetTitle(e.target.value)\n\t},[setTitle])\n\n\tconst PlaceInputChange = useCallback((e)=>{\n\t\t\tsetPlace(e.target.value)\n\t},[setPlace])\n\t\n\tconst DescriptionInputChange = useCallback((e)=>{\n\t\t\tsetDescription(e.target.value)\n\t},[setDescription])\n\n\tconst submitSchedule = async () =>{\n\t\tdispatch(addSchedulesAsync(title,place,description,props.time))\n\t\tsetTitle('')\n\t\tsetPlace('')\n\t\tsetDescription('')\n\t} \n\n\n\treturn (\n\t\t<>\n\t\t<Dialog onClose={props.handleToggle} aria-labelledby=\"simple-dialog-title\" open={props.open} className={classes.dialog} >\n\t\t{\n\t\t\t(!props.detail.title) ? (\n\t\t\t\t<>\n\t\t\t\t<DialogTitle id=\"simple-dialog-title\">予定の作成</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tlabel={\"予定の入力\"}\n\t\t\t\t\t\t\t\tmultiline={false}\n\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\ttype={\"text\"}\n\t\t\t\t\t\t\t\tonChange={ScheduleInputChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className={classes.place} >\n\t\t\t\t\t\t\t\t<PlaceIcon className={classes.icon} />\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\tlabel={\"場所\"}\n\t\t\t\t\t\t\t\t\t\tmultiline={false}\n\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\tvalue={place}\n\t\t\t\t\t\t\t\t\t\ttype={\"text\"}\n\t\t\t\t\t\t\t\t\t\tonChange={PlaceInputChange}\n\t\t\t\t\t\t\t\t/>    \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.place} >\n\t\t\t\t\t\t\t\t<DescriptionIcon className={classes.icon} />\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\tlabel={\"説明\"}\n\t\t\t\t\t\t\t\t\t\tmultiline={false}\n\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\t\t\ttype={\"text\"}\n\t\t\t\t\t\t\t\t\t\tonChange={DescriptionInputChange}\n\t\t\t\t\t\t\t\t/>    \n\t\t\t\t\t\t</div>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tsubmitSchedule()\n\t\t\t\t\t\t\t\t\tprops.handleToggle()\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tcolor=\"primary\">\n\t\t\t\t\t\t　保存\n\t\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t\t</>\n\t\t\t):(\n\t\t\t\t<> \n\t\t\t\t\t<DialogTitle id=\"simple-dialog-title\" >\n\t\t\t\t\t\t<div className={classes.detailTitle}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>■ 予定</p>\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<DeleteIcon className={classes.detailIcon} \n\t\t\t\t\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\t\t\t\t\tdispatch(deleteScheduleAsync(props.detail.created_at))\n\t\t\t\t\t\t\t\t\t\tprops.handleToggle()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ClearIcon  className={classes.detailIcon} \n\t\t\t\t\t\t\t\t\tonClick={()=> props.handleToggle()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogTitle>\t\n\t\t\t\t\t<DialogContent className={classes.content} >\n\t\t\t\t\t\t<h2>タイトル: {props.detail.title}</h2>\n\t\t\t\t\t\t<p>日付: {`${props.detail.month}月${props.detail.date}日`}</p>\n\t\t\t\t\t\t<p>場所: {props.detail.place}</p>\n\t\t\t\t\t\t<p>説明: {props.detail.description}</p>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t</Dialog>       \n\t\t</>\n)\n}\n\nexport default ScheduleDialog",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":91,"column":11,"nodeType":"86","messageId":"87","endLine":91,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":105,"column":7,"nodeType":"90","endLine":105,"endColumn":14,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":21},{"ruleId":"84","severity":1,"message":"93","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":22},{"ruleId":"80","replacedBy":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"84","severity":1,"message":"96","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":17},{"ruleId":"84","severity":1,"message":"97","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":25},{"ruleId":"84","severity":1,"message":"98","line":62,"column":8,"nodeType":"86","messageId":"87","endLine":62,"endColumn":16},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'handleIsCreateClose' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'year'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'DockRounded' is defined but never used.","'schedulesSlice' is defined but never used.",["99"],["100"],"'profile' is defined but never used.","'DialogContentText' is defined but never used.","'selector' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [dispatch, month, year]",{"range":"104","text":"105"},[2749,2756],"[dispatch, month, year]"]